dp Registerfile(in asel, bsel, storesel : ns(3); in storeenable : ns(1); in storedata : tc(32); out a, b : tc(32)) {
	reg one : tc(32);	
	reg two : tc(32);  	
	reg three : tc(32);	
	reg four : tc(32);		
	reg five : tc(32);	
	reg six : tc(32);	
	reg seven : tc(32);
	reg eight : tc(32);
	
	always {
		a = asel==0 ? one : 
		asel==1 ? two : 
		asel==2 ? three :
		asel==3 ? four :
		asel==4 ? five :
		asel==5 ? six :
		asel==6 ? seven :
		asel==7 ? eight : 0;

		b = bsel==0 ? one : 
		bsel==1 ? two : 
		bsel==2 ? three :
		bsel==3 ? four :
		bsel==4 ? five :
		bsel==5 ? six :
		bsel==6 ? seven :
		bsel==7 ? eight : 0;

		two = storesel==1 & storeenable ? storedata : two;
		three = storesel==2 & storeenable ? storedata : three;
		four = storesel==3 & storeenable ? storedata : four;
		five = storesel==4 & storeenable ? storedata : five;
		six = storesel==5 & storeenable ? storedata : six;
		seven = storesel==6 & storeenable ? storedata : seven;
		eight = storesel==7 & storeenable ? storedata : eight;
	}
}


dp testReg(out Asel, Bsel, Storesel : ns(3); out storeenable : ns(1); out storedata : tc(32); in A, B:tc(32)) {
	always{
		$display($dec, "Cycle:", $cycle, " ,Asel=", Asel , ", Bsel=", Bsel, ", Storesel=", Storesel, ", Storeenable=", storeenable, ", Storedata=", storedata, ", A=", A, ", B=", B);
	}

	sfg test_0 { Asel=0; Bsel=0; Storesel=1; storeenable=1; storedata=42;}
	sfg test_1 { Asel=0; Bsel=1; Storesel=2; storeenable=1; storedata=43;}
	sfg test_2 { Asel=1; Bsel=2; Storesel=3; storeenable=0; storedata=44;}
	sfg test_3 { Asel=2; Bsel=3; Storesel=1; storeenable=1; storedata=45;}
	sfg test_4 { Asel=3; Bsel=0; Storesel=4; storeenable=0; storedata=46;}

}

// state machine to control testbench
fsm f_testbench(testReg){
	initial s0; // begin with state s0
	state s1, s2, s3, s4; // other states are: s1, s2
	@s0 (test_0) -> s1; // run test_0 and go to s1
	@s1 (test_1) -> s2; // run test_1 and go to s2
	@s2 (test_2) -> s3; // run test_2 and go to s3
	@s3 (test_3) -> s4; // run test_3 and go to s4
	@s4 (test_4) -> s0; // run test_4 and go to s0
}

system Registers{
	Registerfile(Asel, Bsel, Storesel, storeenable, storedata, A, B);
	testReg(Asel, Bsel, Storesel, storeenable, storedata, A, B);
}